{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : []
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dst_addr", 48, false],
        ["src_addr", 48, false],
        ["ethtype", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["raw_ipv4_1", 64, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdr_checksum", 16, false],
        ["src_addr", 32, false],
        ["dst_addr", 32, false]
      ]
    },
    {
      "name" : "source_r_t",
      "id" : 4,
      "fields" : [
        ["bos", 1, false],
        ["port", 9, false],
        ["reserved", 6, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "source_r[0]",
      "id" : 4,
      "header_type" : "source_r_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "source_r[1]",
      "id" : 5,
      "header_type" : "source_r_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "source_r[2]",
      "id" : 6,
      "header_type" : "source_r_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "source_r[3]",
      "id" : 7,
      "header_type" : "source_r_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "source_r[4]",
      "id" : 8,
      "header_type" : "source_r_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "source_r[5]",
      "id" : 9,
      "header_type" : "source_r_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "source_r[6]",
      "id" : 10,
      "header_type" : "source_r_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "source_r[7]",
      "id" : 11,
      "header_type" : "source_r_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "source_r[8]",
      "id" : 12,
      "header_type" : "source_r_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [
    {
      "name" : "source_r",
      "id" : 0,
      "header_type" : "source_r_t",
      "size" : 9,
      "header_ids" : [4, 5, 6, 7, 8, 9, 10, 11, 12]
    }
  ],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x1234",
              "mask" : null,
              "next_state" : "parsing_srcr"
            },
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parsing_ipv4"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "ethtype"]
            }
          ]
        },
        {
          "name" : "parsing_srcr",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "stack",
                  "value" : "source_r"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00",
              "mask" : null,
              "next_state" : "parsing_srcr"
            },
            {
              "type" : "hexstr",
              "value" : "0x01",
              "mask" : null,
              "next_state" : "parsing_ipv4"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "stack_field",
              "value" : ["source_r", "bos"]
            }
          ]
        },
        {
          "name" : "parsing_ipv4",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "include/parser.p4",
        "line" : 58,
        "column" : 8,
        "source_fragment" : "DeparserImpl"
      },
      "order" : ["ethernet", "source_r[0]", "source_r[1]", "source_r[2]", "source_r[3]", "source_r[4]", "source_r[5]", "source_r[6]", "source_r[7]", "source_r[8]", "ipv4"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "source_info" : {
        "filename" : "main.p4",
        "line" : 19,
        "column" : 12,
        "source_fragment" : "update_checksum(true, { ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "raw_ipv4_1"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "src_addr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dst_addr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "IngressPipeImpl.drop",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "main.p4",
            "line" : 37,
            "column" : 2,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.srcRoute_nhop",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["source_r[0]", "port"]
            }
          ],
          "source_info" : {
            "filename" : "main.p4",
            "line" : 41,
            "column" : 2,
            "source_fragment" : "standard_metadata.egress_spec = hdr.source_r[0].port"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "source_r[0]"
            }
          ],
          "source_info" : {
            "filename" : "main.p4",
            "line" : 43,
            "column" : 2,
            "source_fragment" : "hdr.source_r[0].setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.srcRoute_finish",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "ethtype"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0800"
            }
          ],
          "source_info" : {
            "filename" : "include/define.p4",
            "line" : 27,
            "column" : 31,
            "source_fragment" : "0x0800; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.update_ttl",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "main.p4",
            "line" : 51,
            "column" : 2,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "main.p4",
        "line" : 32,
        "column" : 8,
        "source_fragment" : "IngressPipeImpl"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_srcRoute_finish",
          "id" : 0,
          "source_info" : {
            "filename" : "main.p4",
            "line" : 57,
            "column" : 4,
            "source_fragment" : "srcRoute_finish()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2],
          "actions" : ["IngressPipeImpl.srcRoute_finish"],
          "base_default_next" : "tbl_srcRoute_nhop",
          "next_tables" : {
            "IngressPipeImpl.srcRoute_finish" : "tbl_srcRoute_nhop"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_srcRoute_nhop",
          "id" : 1,
          "source_info" : {
            "filename" : "main.p4",
            "line" : 60,
            "column" : 3,
            "source_fragment" : "srcRoute_nhop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [1],
          "actions" : ["IngressPipeImpl.srcRoute_nhop"],
          "base_default_next" : "node_6",
          "next_tables" : {
            "IngressPipeImpl.srcRoute_nhop" : "node_6"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_update_ttl",
          "id" : 2,
          "source_info" : {
            "filename" : "main.p4",
            "line" : 63,
            "column" : 4,
            "source_fragment" : "update_ttl()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [3],
          "actions" : ["IngressPipeImpl.update_ttl"],
          "base_default_next" : null,
          "next_tables" : {
            "IngressPipeImpl.update_ttl" : null
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_drop",
          "id" : 3,
          "source_info" : {
            "filename" : "main.p4",
            "line" : 66,
            "column" : 3,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [0],
          "actions" : ["IngressPipeImpl.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "IngressPipeImpl.drop" : null
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "main.p4",
            "line" : 55,
            "column" : 6,
            "source_fragment" : "hdr.source_r[0].isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["source_r[0]", "$valid$"]
              }
            }
          },
          "true_next" : "node_3",
          "false_next" : "tbl_drop"
        },
        {
          "name" : "node_3",
          "id" : 1,
          "source_info" : {
            "filename" : "main.p4",
            "line" : 56,
            "column" : 7,
            "source_fragment" : "hdr.source_r[0].bos == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["source_r[0]", "bos"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_srcRoute_finish",
          "false_next" : "tbl_srcRoute_nhop"
        },
        {
          "name" : "node_6",
          "id" : 2,
          "source_info" : {
            "filename" : "main.p4",
            "line" : 62,
            "column" : 7,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_update_ttl"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "main.p4",
        "line" : 9,
        "column" : 8,
        "source_fragment" : "EgressPipeImpl"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "main.p4",
        "line" : 19,
        "column" : 12,
        "source_fragment" : "update_checksum(true, { ..."
      },
      "target" : ["ipv4", "hdr_checksum"],
      "type" : "generic",
      "calculation" : "calc",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "bool",
        "value" : true
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "main.p4",
  "__meta__" : {
    "version" : [2, 18],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}